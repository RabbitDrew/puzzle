{"version":3,"file":"bundle.3f4fc7c42ba703fa081d.js","mappings":"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","sources":["webpack://puzzle/./src/compnents/page/body/page.ts","webpack://puzzle/./src/compnents/page/intro/intro.ts","webpack://puzzle/./src/compnents/page/intro_start/create_staart_elements.ts","webpack://puzzle/./src/compnents/page/intro_start/intro_start.ts","webpack://puzzle/./src/compnents/page/intro_entry/create_entry_elements.ts","webpack://puzzle/./src/compnents/page/intro_entry/intro_entry.ts","webpack://puzzle/./src/compnents/intro_entry_toggler/enabled_intro.ts","webpack://puzzle/./src/compnents/intro_entry_toggler/Toggler.ts","webpack://puzzle/./src/compnents/get_html_elements/get-elements.ts","webpack://puzzle/./src/compnents/intro_entry_toggler/switch-elements.ts","webpack://puzzle/./src/compnents/create_user/validation.ts","webpack://puzzle/./src/compnents/create_user/create_user_build.ts","webpack://puzzle/./src/compnents/create_user/create_user.ts"],"sourcesContent":["import \"./page.css\"\r\nconst body = document.querySelector(\"body\") as HTMLElement\r\nexport default class Page {\r\n    constructor (public tag:HTMLElement, public atribute:string) {\r\n        this.tag\r\n        this.atribute\r\n    }\r\n    setAtribute() {\r\n        this.tag.classList.add(this.atribute)\r\n    }\r\n}\r\nlet setPage = new Page( body, \"page\") \r\n    setPage.setAtribute()","// create elements\r\nimport \"./intro.css\"\r\nexport default class Intro {\r\n    constructor ( public tag:string, public attribute: string ) {\r\n        this.tag\r\n        this.attribute\r\n    }\r\ncreatePageContainer () {\r\n    const getPage = document.querySelector<HTMLElement>(\".page\") \r\n    const createPageCOntainer:HTMLElement = document.createElement(this.tag)\r\n    createPageCOntainer.classList.add(this.attribute)\r\n    getPage?.appendChild(createPageCOntainer)\r\n    }\r\ncreatePageStart () {\r\n    const getPageContainer = document.querySelector(\".page-container\") as HTMLElement\r\n    const createPageStart:HTMLElement = document.createElement (this.tag)\r\n    createPageStart.classList.add(this.attribute)\r\n    getPageContainer.appendChild(createPageStart) \r\n}\r\n} \r\nlet pageContainer = new Intro (\"div\", \"page-container\")\r\n    pageContainer.createPageContainer()\r\nlet pageStart = new Intro (\"div\", \"page-start\")\r\n    pageStart.createPageStart()\r\n\r\n\r\n    // createPage container rename method ","export default class Start{\r\n    private getStartIntro \r\n    constructor  (public tag: string, \r\n                  public className: string, \r\n                 public hide?:string,\r\n                 public animationHide?:string,\r\n                 public animationOpen?:string,) {\r\n    this.getStartIntro = document.querySelector(\".start-intro\") as HTMLElement\r\n}\r\n    startIntro ():void {\r\n        const getPageStart = document.querySelector(\".page-start\")as HTMLElement\r\n        const creatStartIntro = document.createElement(this.tag)as HTMLElement\r\n        creatStartIntro.classList.add(`${this.className}`,`${this.hide}`, `${this.animationHide}`, `${this.animationOpen}`)\r\n        getPageStart.appendChild(creatStartIntro)      \r\n    }\r\n\r\n    createInnerElements(content: string, spanContent?: string): void {\r\n        const createEl: HTMLElement = document.createElement(this.tag);\r\n        createEl.classList.add(`${this.className}`);\r\n\r\n\r\n        if (spanContent) {\r\n            const spanEl: HTMLElement = document.createElement('span');\r\n            spanEl.classList.add('subtitle-capital__letter');\r\n            spanEl.textContent = spanContent;\r\n            createEl.appendChild(spanEl);\r\n        }\r\n\r\n      \r\n        //add br element and text after tag span \r\n        createEl.insertAdjacentHTML('beforeend', content);\r\n        this.getStartIntro.appendChild(createEl);\r\n    }\r\n\r\n    btnTitle (content:string):void {\r\n        const getStartBtn = document.querySelector(\".intro-btn\") as HTMLElement\r\n        const createBtnTitle:HTMLElement = document.createElement(this.tag)\r\n        createBtnTitle.classList.add(`${this.className}`)\r\n        createBtnTitle.textContent = content\r\n        getStartBtn.appendChild(createBtnTitle)\r\n    } \r\n}","//create intro start \r\nimport \"./intro_start.css\"\r\nimport Start from \"./create_staart_elements\"\r\nlet createStartIntro = new Start (\"div\", \r\n                                 \"start-intro\", \r\n                                 \"start-close--open\",\r\n                                 \"start-hide-anim\",\r\n                                 \"start-open-anim\")\r\ncreateStartIntro.startIntro()\r\nlet createIntroTitle = new  Start (\"h1\", \"intro-title\")\r\ncreateIntroTitle.createInnerElements(\"english puzzle\")\r\nlet createIntroSubtitle = new Start(\"h2\", \"intro-subtitle\");\r\ncreateIntroSubtitle.createInnerElements(\"on words, collect phrases.<br>Words can be drag and drop. Select tooltips in the menu\", \"click\");\r\nlet createStartBtn = new Start (\"div\", \"intro-btn\")\r\ncreateStartBtn.createInnerElements(\"\")\r\nlet createStartBtnTitle = new Start (\"h2\", \"btn-title\")\r\ncreateStartBtnTitle.btnTitle(\"Start\")\r\n\r\n","export default class Entry{\r\n    private getStartEntry\r\n    constructor  (public tag: string, \r\n                  public className: string, \r\n                  public hide?:string,\r\n                  public animationHide?:string,\r\n                  public animationOpen?:string,) {\r\n    this.getStartEntry = document.querySelector(\".start-entry\") as HTMLElement            \r\n}\r\n    startIntro ():void {\r\n        const getPageStart = document.querySelector(\".page-start\")as HTMLElement\r\n        const creatStartIntro:HTMLElement = document.createElement(this.tag)as HTMLElement\r\n        creatStartIntro.classList.add(`${this.className}`,`${this.hide}`, `${this.animationHide}`, `${this.animationOpen}`)\r\n        getPageStart.appendChild(creatStartIntro)      \r\n    }\r\n\r\n    createInnerEntry (content?:string):void {\r\n        const createEl: HTMLElement = document.createElement(this.tag);\r\n        createEl.classList.add(`${this.className}`);\r\n        if (content) {\r\n            createEl.textContent = content\r\n        }\r\n        this.getStartEntry.appendChild(createEl)\r\n    }\r\n    inputs(lableTag:string,\r\n           lableClass:string,\r\n           ):void {\r\n      const attributesArr:string[] = [\"name\", \"surname\", \"email\"]\r\n      const getEntryInputs = document.querySelector(\".entry-inputs\") as HTMLElement\r\n      for (let i = 0; i < 3; i++) { \r\n        const createInputs:HTMLElement = document.createElement(this.tag) \r\n        createInputs.setAttribute(\"placeholder\", attributesArr[i]);\r\n        createInputs.classList.add(this.className)\r\n        getEntryInputs.appendChild(createInputs)\r\n    \r\n        // lable add attributes and classes \r\n        const createLabel: HTMLElement = document.createElement(lableTag);\r\n        createLabel.setAttribute(\"for\", this.className);//pass class of input to attche the lable to the input\r\n        createLabel.classList.add(lableClass);//have two classe add right class to the right lable and additional class for highelight error\r\n        createLabel.textContent = attributesArr[i];//add texto into the lable according attribute of input \r\n        getEntryInputs.appendChild(createLabel);\r\n      } \r\n    }\r\n\r\n    btn ():void {\r\n        const getEntryBtn = document.querySelector(\".entry-btn\") as HTMLElement \r\n        for(let i = 0; i < 2; i++){\r\n        const createEl: HTMLElement = document.createElement(this.tag);\r\n        createEl.classList.add(`${this.className}`);\r\n        getEntryBtn.appendChild(createEl)\r\n        }\r\n    }\r\n    btnTitle():void {\r\n        const btnTitles: string[] = [\"log out\", \"log in\"]\r\n        const getBtnLog: NodeListOf<HTMLElement> = document.querySelectorAll(\".btn-log\") \r\n        getBtnLog.forEach((el:HTMLElement, i:number) => {\r\n            const creatBtnTitle: HTMLElement = document.createElement(this.tag)\r\n            creatBtnTitle.classList.add(this.className)\r\n            creatBtnTitle.textContent = btnTitles[i]\r\n            el.appendChild(creatBtnTitle)\r\n        })\r\n    }\r\n}\r\n","import \"./intro_entry.css\"\r\nimport Entry from \"./create_entry_elements\"\r\nlet createStartEntry = new Entry(\"div\",\r\n                                      \"start-entry\",\r\n                                      \"entry-close--open\",\r\n                                      \"entry-hide-anim\",\r\n                                      \"entry-open-anim\")\r\ncreateStartEntry.startIntro()\r\nlet createEntryInputs = new Entry (\"div\",\"entry-inputs\")\r\ncreateEntryInputs.createInnerEntry()\r\nlet creatInputs = new Entry (\"input\",\"entry-input\")\r\ncreatInputs.inputs(\"lable\", \r\n                   \"inputs-label\")//pass value for creating inputs \r\nlet createEntryBtn = new Entry ('div', \"entry-btn\")\r\ncreateEntryBtn.createInnerEntry()\r\n\r\nlet createBtnLog = new Entry (\"div\", \"btn-log\")\r\ncreateBtnLog.btn()\r\n\r\nlet createBtnTitle = new Entry (\"h2\", \"log-title\")\r\ncreateBtnTitle.btnTitle()","export default function introIsEnabled ():void {\r\n    const getIntro = document.querySelector <HTMLElement> (\".start-intro\")\r\n    const getEntry = document.querySelector <HTMLElement> (\".start-entry\")\r\n    //check that we've got getIntro element \r\n    if (getIntro && getEntry) {\r\n        getIntro.classList.remove(\"start-close--open\",\"start-hide-anim\");\r\n        getEntry.classList.remove (\"entry-open-anim\", \"entry-hide-anim\")\r\n    }\r\n  \r\n}\r\nintroIsEnabled ()","export default class Toggler {\r\n    constructor (public toggleEl:HTMLElement, \r\n                 public triggerEl: HTMLElement, \r\n                 public firstClass?: string,\r\n                 public secondClass?: string) {\r\n    } \r\n\r\n    animate():void {\r\n        this.triggerEl.addEventListener ('click', (event) => {\r\n          this.toggleEl.classList.remove(`${this.firstClass}`)   \r\n          this.toggleEl.classList.add(`${this.secondClass}`)  \r\n        })\r\n    }\r\n    disable():void {\r\n        this.triggerEl.addEventListener ('click', (event) => {\r\n            setTimeout(() => {\r\n                this.toggleEl.classList.add(`${this.firstClass}`);\r\n            }, 1000);  \r\n          })\r\n    }\r\n    enable(hide?:string):void {\r\n        this.triggerEl.addEventListener ('click', (event) => {\r\n            setTimeout(() => {\r\n                this.toggleEl.classList.remove(`${this.firstClass}`);\r\n                this.toggleEl.classList.add(`${this.secondClass}`)\r\n                if (hide) {\r\n            this.toggleEl.classList.remove(`${hide}`)    \r\n                }\r\n            }, 1000);  \r\n          })\r\n    }\r\n}\r\n\r\n","//checking type and get elements\r\nexport const getElement = (className:string):HTMLElement => {\r\n    const element = document.querySelector<HTMLElement>(`.${className}`)\r\n    if (!element){ \r\n        throw console.error(\"the element is undefined\");\r\n    } else {\r\n        return element\r\n    }\r\n}\r\n\r\nexport const  getNodeListOfElements = (className:string):NodeListOf<HTMLInputElement> => {\r\n    const elements = document.querySelectorAll<HTMLInputElement>(`.${className}`)\r\n    if (!elements){ \r\n        throw console.error(\"the element is undefined\");\r\n    } else {\r\n        return elements \r\n    }\r\n}\r\n\r\nexport const getElementFromNodeList = (className: string, index: number): HTMLElement => {\r\n  const elements = document.querySelectorAll(`.${className}`);\r\n  /*return needed el from node list make arr from node list then apply method \r\n  find to array and the return found element */ \r\n  return Array.from(elements).find((_,i:number):boolean=> i === index) as HTMLElement\r\n}","import Toggler from \"./Toggler\";\r\nimport { getElement } from \"../get_html_elements/get-elements\";\r\nimport { getElementFromNodeList } from \"../get_html_elements/get-elements\";\r\n//get elements\r\nconst getIntro = getElement(\"start-intro\")\r\nconst getEntry = getElement(\"start-entry\")\r\nconst introBtn = getElement(\"intro-btn\")\r\nconst LogOutBtn = getElementFromNodeList(\"btn-log\", 0)\r\n//close intro win and open entry win \r\nlet hideIntro = new Toggler (getIntro, introBtn, \"start-open-anim\",\"start-hide-anim\")\r\nhideIntro.animate()\r\nlet closeIntro = new Toggler (getIntro, introBtn, \"start-close--open\") \r\ncloseIntro.disable()\r\nlet openEntry = new Toggler (getEntry,introBtn, \"entry-close--open\", \"entry-open-anim\") \r\nopenEntry.enable()\r\n\r\n//close entry win and open intro win \r\nlet hideEntry =new Toggler (getEntry, LogOutBtn, \"entry-open-anim\",\"entry-hide-anim\")\r\nhideEntry.animate()\r\nlet closeEntry = new Toggler(getEntry,LogOutBtn, \"entry-close--open\")\r\ncloseEntry.disable()\r\n\r\nlet openIntro = new Toggler(getIntro, LogOutBtn, \"start-close--open\", \"start-open-anim\")\r\nopenIntro.enable(\"start-hide-anim\")","import { getNodeListOfElements } from \"../get_html_elements/get-elements\";\r\nimport { getElementFromNodeList } from \"../get_html_elements/get-elements\";\r\n//get the btn login\r\nconst btn = getElementFromNodeList(\"btn-log\", 1)\r\n//err function \r\nconst err = function (element:HTMLElement, toggleClass:string):void {\r\n        element.classList.add(toggleClass)\r\n        setTimeout(() => {element.classList.remove(toggleClass)},1500);\r\n}\r\n//validation \r\nexport const validation = function () { //export validation function to the create_user module \r\n    const getInputs = getNodeListOfElements('entry-input')\r\n    const getLable = getNodeListOfElements(\"inputs-label\")\r\n    let userNameAndSUrname:string[] = []\r\n    //if validation below passed add value of inputs to the variables name and wurname \r\n    let valueOfName: string = \"\";\r\n    let valueOfSurname:string =\"\";\r\n    let valueOfEmail:string =\"\";\r\n    //regulare expression for checking input value\r\n    const regExpression =/^[A-Z][a-z]+(?:-[a-z]+)*$/;\r\n    const regExpressionEmail = /^[A-Za-z0-9][A-Za-z0-9.-_]*[A-Za-z0-9]*@([A-Za-z0-9]+([A-Za-z0-9-]*[A-Za-z0-9]+)*\\.)+[A-Za-z]*$/\r\n    getInputs.forEach((input: HTMLInputElement, i:number) => {\r\n        if (i === 0) {//check for name input \r\n            // check input field length,and reg expression method test \r\n            if (input.value === \"\" \r\n            || input.value.length<3 ||!regExpression.test(input.value)) {\r\n                err(input,\"valid-err\") // highlite the input when there is error \r\n                err(getLable[i], \"valid-err__lable\") //highlite the lable when there is error \r\n            } else {\r\n                valueOfName = input.value;\r\n            } \r\n        } else if ( i === 1) {//check for surname input\r\n            // check input field length,and reg expression method test \r\n            if (input.value === \"\" \r\n                || input.value.length<4 \r\n                || !regExpression.test(input.value)){\r\n                err(input, \"valid-err\")\r\n                err(getLable[i], \"valid-err__lable\") \r\n            }else {\r\n                valueOfSurname = input.value\r\n            }\r\n        } else if (i === 2) {\r\n            if (input.value === \"\" \r\n                || input.value.length<4 \r\n                || !regExpressionEmail.test(input.value)){\r\n                err(input, \"valid-err\")\r\n                err(getLable[i], \"valid-err__lable\") \r\n            }else {\r\n                valueOfEmail = input.value\r\n            }\r\n        }\r\n\r\n    });\r\n    //sent valueOfName and valueOfSurname to the array userNameAndSUrname\r\n    userNameAndSUrname.push(valueOfName,valueOfSurname,valueOfEmail)\r\n    return userNameAndSUrname\r\n  };\r\n\r\n  //add event listner for btn \r\n  btn.addEventListener(\"click\", () =>{\r\n    validation()\r\n  })\r\n","import \"../get_html_elements/get-elements\"\r\n//import types \r\nimport \"./types_ts/types\"\r\nimport type {userTypes } from \"./types_ts/types\"\r\n\r\nexport default class createUser {\r\n    constructor( public name:string, \r\n                 public surname:string, \r\n                 public email:string) {}\r\n    // Check users and return arr of all users from local storage\r\n    // In order to create first user\r\n    checkLoclaStorgae (): string[] {\r\n        let arrOfExistingUsers: string [] = []\r\n        // get keys of all storage\r\n        for (let i:number =0; i < localStorage.length; i++) {\r\n            arrOfExistingUsers.push(localStorage.key(i) as string)\r\n        } \r\n        console.log(arrOfExistingUsers)\r\n        return arrOfExistingUsers \r\n    } \r\n    checkUserEmail() {\r\n        //add check types\r\n        let userMailAddresses: Set<string> = new Set()\r\n        for (let i:number =0; i < localStorage.length; i++) {\r\n            const keyValues = localStorage.getItem(localStorage.key(i) as string);\r\n            if (!keyValues) { //check type \r\n                throw console.error(\"undefined\");//change the message\r\n            }else {\r\n                const mail = JSON.parse(keyValues)\r\n                userMailAddresses.add(mail.email) \r\n            }\r\n        } \r\n        console.log(userMailAddresses)\r\n        return userMailAddresses\r\n    }\r\n    // add new user in local storage\r\n    setUser(users: string[], emails:Set<string>):void {\r\n        let numberOfUser:number = 0 // number of new User \r\n        if (users.length<=0) { // create the first user\r\n            const user:userTypes = {\r\n                name:this.name,\r\n                surname:this.surname,\r\n                email:this.email,\r\n                active: false\r\n            }\r\n            localStorage.setItem(\"person\", JSON.stringify(user))\r\n        } else { // create the rest of users     \r\n                for (let mail of emails) { \r\n                    if (mail === this.email) {//check users if some user has the smae email addres \r\n                            throw console.error(\"User with the same email addres already exists\");    \r\n                        }else {\r\n                            numberOfUser +=1\r\n                            let newUser:string = \"person\"+\"№\"+numberOfUser.toString()\r\n                            const person:userTypes = {\r\n                                name:this.name,\r\n                                surname:this.surname,\r\n                                email:this.email,\r\n                                active: false\r\n                            }\r\n                            localStorage.setItem(newUser, JSON.stringify(person))\r\n                        }   \r\n                }\r\n    \r\n        }\r\n           \r\n       }\r\n    }\r\n","import { getElementFromNodeList } from \"../get_html_elements/get-elements\";\r\nimport createUser from \"./create_user_build\";\r\nimport { validation } from \"./validation\";\r\n//add user to the local storage \r\nconst getBtn = getElementFromNodeList(\"btn-log\",1)\r\nconst newUser = function (userData:string[]):void {\r\n    let userName:string = \"\"\r\n    let userSurname: string =\"\"\r\n    let userEmail: string= \"\"\r\n    userData.forEach((data:string, i:number) => {\r\n      if (i === 0) {\r\n        userName = data\r\n      } else if (i === 1) {\r\n        userSurname = data\r\n      } else if (i === 2) {\r\n        userEmail = data\r\n      }\r\n    })\r\n    let newUser = new createUser(userName, userSurname, userEmail) \r\n    newUser.setUser(newUser.checkLoclaStorgae(),newUser.checkUserEmail())\r\n    console.log(newUser.checkUserEmail())\r\n}\r\n\r\ngetBtn.addEventListener(\"click\", ()=> {\r\nnewUser(validation())\r\n})\r\n\r\n"],"names":["body","document","querySelector","constructor","tag","atribute","this","setAtribute","classList","add","Intro","attribute","createPageContainer","getPage","createPageCOntainer","createElement","appendChild","createPageStart","getPageContainer","Start","className","hide","animationHide","animationOpen","getStartIntro","startIntro","getPageStart","creatStartIntro","createInnerElements","content","spanContent","createEl","spanEl","textContent","insertAdjacentHTML","btnTitle","getStartBtn","createBtnTitle","Entry","getStartEntry","createInnerEntry","inputs","lableTag","lableClass","attributesArr","getEntryInputs","i","createInputs","setAttribute","createLabel","btn","getEntryBtn","btnTitles","querySelectorAll","forEach","el","creatBtnTitle","getIntro","getEntry","remove","introIsEnabled","Toggler","toggleEl","triggerEl","firstClass","secondClass","animate","addEventListener","event","disable","setTimeout","enable","getElement","element","console","error","getNodeListOfElements","elements","getElementFromNodeList","index","Array","from","find","_","introBtn","LogOutBtn","err","toggleClass","validation","getInputs","getLable","userNameAndSUrname","valueOfName","valueOfSurname","valueOfEmail","regExpression","regExpressionEmail","input","value","length","test","push","createUser","name","surname","email","checkLoclaStorgae","arrOfExistingUsers","localStorage","key","log","checkUserEmail","userMailAddresses","Set","keyValues","getItem","mail","JSON","parse","setUser","users","emails","numberOfUser","user","active","setItem","stringify","newUser","toString","person","userData","userName","userSurname","userEmail","data"],"sourceRoot":""}